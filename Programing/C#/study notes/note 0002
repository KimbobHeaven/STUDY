정수형 자료형

sbyte | 8bit | -2^7 to 2^7-1
byte | 8bit | 0 to 2^8-1

short | 16bit | -2^15 to 2^15-1
ushort | 16bit | 0 to 2^16-1

int | 32bit | -2^31 to 2^31-1
uint | 32bit | 0 tp 2^32-1

long | 64bit | -2^63 to 2^63-1
ulong | 64bit | 0 to 2^64-1

정수형 리터럴 값
  숫자의 시퀀스로 구성, 소수점이 없음
  ex) 23

실수형 자료형

float | 4byte | 1.5E-45 to 3.4E48 (7자릿수)
double | 8byte | 5.0E-324 to 1.7E308 (15자릿수)
decimal | 16byte | 1.0*10^-28 to 7.9*10^28 (31자릿수?)

실수형 리터럴 값
  float : 실수뒤에 f
  ex) 2.5f
  double : 실수뒤에 f붙이지 않음
  ex) 3.5
  float, double 값에는 지수를 붙잉ㅁ
  ex) 9.4605284E15
  
double 타입의 변수를 일반적인 float 으로 변환할 때 일부값의 정확도가 떨어질 수 있음

텍스트 자료형

char | UNICODE 16bit | 문자 하나를 담는 변수, 작은 따옴표 사용
string | UNICODE 문자열 | 큰 따옴표 사용
bool | 4byte | true 혹은 false 저장

캐릭터 이스케이프 시퀀스
  \' : 작은 따옴표
  \" : 큰 따옴표
  \\ : 백슬래시
  \0 : 널
  \a : 경고음
  \b : 백스페이스
  \f : 폼피드
  \n : 줄바꿈
  \r : 캐리지 리턴
  \t : 수평탭
  \v : 수직탭
  
UNICODE
  컴퓨터는 문자를 숫자로 다루는데 유니코드 문자에서 문자 리터럴을 값으로 표시 가능, 16진수로 표기
  ex) '\x0041' 은 A에 해당함

문자열 리터럴 값
  문자열 리터럴은 큰 따옴표로 감쌈
  ex) "this is a string"
  이스케이프 시퀀스를 포함
  ex) "\x0041BCDE\a"
  위의 문자열을 출력할시 다음의 결과를 반환함
  ex) ABCDE
  이스케이프 문자효과를 내지 않고 텍스트 상ㅇ시 리터럴 맨 앞에 @를 붙여 버바텀 문자열임을 알림
  ex) @"\x0041BCDE\a" 출력시 \x0041BCDE\a

식별자
  모든 식졀자명은 문자로시작
  문자 뒤에는 문자, 숫자, 밑줄을 사용 할 수 있다
  문자의 대소문자는 서로 구분된다
